/*
 * Copyright 2017-present ElectroSoft LLC. All rights reserved. All wrongs reversed.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()

        maven { url 'https://plugins.gradle.org/m2' }
        maven { url "https://oss.sonatype.org/content/repositories/snapshots/" }
        maven { url "https://jitpack.io" }
    }
}

plugins {
    id 'java' apply true
    id 'idea' apply true
    id 'org.jetbrains.kotlin.jvm' version '1.9.23'
    id 'java-library' apply true
    id 'maven-publish' apply true
}

configurations {
    embed
    implementation.extendsFrom(embed)
}

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = JavaVersion.VERSION_1_8
compileJava.options.encoding = 'UTF-8'

group = project.tr_group
archivesBaseName = project.tr_name
version = project.tr_version

repositories {
    mavenLocal()
    mavenCentral()

    maven { url 'https://jitpack.io' }
    maven { url 'https://repository.apache.org/content/repositories/releases/org/apache/xmlgraphics/' }
}

compileKotlin {
    kotlinOptions {
        suppressWarnings = false
        jvmTarget = '1.8'
    }
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

idea {
    module {
        inheritOutputDirs = true
    }
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.7.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.7.0'
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    embed 'org.jetbrains.kotlin:kotlin-stdlib:1.9.23'
    embed 'org.jetbrains.kotlin:kotlin-reflect:1.9.23'

    embed fileTree('libs')
}

jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    configurations.embed.each { dep ->
        exclude 'LICENSE.txt'
        from(project.zipTree(dep)) {
            exclude 'META-INF', 'META-INF/**'
        }
    }
    manifest.attributes(
        "Built-By": System.properties['user.name'],
        "Created-By": System.properties['java.vm.version'] + " (" + System.properties['java.vm.vendor'] + ")",
        "Implementation-Title": project.tr_name,
        "Implementation-Version": project.tr_version,
        "Implementation-Vendor": project.tr_website
    )
}

sourceSets {
    main.kotlin.srcDirs += 'src/main/kotlin'
    main.java.srcDirs += 'src/main/java'
}

kotlin {
    sourceSets {
        jvmMain {
            dependencies {
                implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core-jvm:1.9.23'
            }
        }
    }
}

test {
    useJUnitPlatform()
    useTestNG()
}

publishing {
    repositories {
        maven {
            url = "repo/"
        }
    }

    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'fullythreaded'
                description = 'Simple and open-source multithreading utility.'
                url = 'https://github.com/electrosoftllc/fully-threaded'
                licenses {
                    license {
                        name = 'Apache License 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0'
                    }
                }

                developers {
                    developer {
                        id = 'fully-threaded'
                        name = 'ElectroSoft LLC'
                        email = 'ab20zipyt@electrosoft.in'
                    }
                }
            }
        }
    }
}
